<script type="text/javascript">
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/player_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
</script>
<% @quotes.each do |quote| %>
    <div id="ytplayer_<%= quote.id %>"></div>
<% end %>

<script type="text/javascript">
    function onYouTubePlayerAPIReady() {
        <% @quotes.each do |quote| %>
        <% urlid = /^(?:https?:\/\/)?(?:www\.)?youtu(?:\.be|be\.com)\/(?:watch\?v=)?([\w-]{10,})/.match(quote.url)[1] %>
        <% id = quote.id %>
        window['hasPaused_<%= id %>'] = false;
        window['videotime_<%= id %>'] = 0;
        player_<%= id %> = new YT.Player('ytplayer_<%= id %>', {
            height: '300',
            width: '450',
            videoId: '<%= urlid %>',
            playerVars: {'iv_load_policy': 3, 'controls': 0, 'rel': 0, 'showinfo': 0},
            events: {
                'onReady': function() {
                    onPlayerReady(<%= id %>, player_<%= id %>, <%= quote.start %>, <%= quote.end %>);
                },
                'onStateChange': function(e) {
                    onPlayerStateChange(e, <%= id %>, player_<%= id %>, <%= quote.start %>);
                }
            }
        });
        <% end %>
    }
    function onPlayerStateChange(event, id, player, start) {
        if (event.data == 1 &&  !window['hasPaused_'+id]) {
            player.pauseVideo();
            window['hasPaused_'+id] = true;
        }
        else if (event.data == 0) {
            player.seekTo(start);
        }
    }
    function onPlayerReady(id, player, start, end) {
        player.seekTo(start);
        player.mute();
        $('#ytplayer_'+id).hover(function () {
            player.playVideo();
        }, function () {
            player.pauseVideo();
        });
        function updateTime() {
            newVideotime = player.getCurrentTime();
            if (newVideotime != window['videotime_'+id]) {
                onProgress(newVideotime, player, start, end);
            }
        }
        setInterval(updateTime, 100);
    }
    function onProgress(currentTime, player, start, end) {
        if (currentTime > end) {
            player.seekTo(start);
            player.playVideo();
        }
    }

</script>