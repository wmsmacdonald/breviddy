<script type="text/javascript">
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/player_api";
    scriptArray = document.getElementsByTagName('script');
    var firstScriptTag = scriptArray[scriptArray.length - 1];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    window.players = [];

    var isPlaying = false;

    function onPlayerStateChange(event, id, player, start) { // Seeks to start and pauses if not on screen

        if (event.data == 1 & !player.onFirstSeekDone) { // Checks if event is valid and onFirstSeek hasn't been marked done

            function onFirstSeek() { // Pause player and mark done

                player.onFirstSeekDone = true; // Mark done

                if (!$('#quote-box_' + id).isOnScreen(1, 0.8)) { // Checks if player is not on screen
                    player.pauseVideo();
                }

            }
            onFirstSeek();

        }

    }

    function getCookie(key) {
        var cookieArray = document.cookie.split(';');
        for (var i = 0; i < cookieArray.length; i++) {
            if ($.trim(cookieArray[i].split('=')[0]) == key) {
                return cookieArray[i].split('=')[1];
            }
        }
        return "";
    }

    function onPlayerReady(id, player, start, end) {
    // Seek player to start and get controls functioning

        player.seekTo(start);

        function muteButtonMuted() {
            $('.mute-quote-button').each(function() {
                $(this).html('<i class="fa fa-volume-off fa-2x"></i><i class="fa fa-close mute-quote-icon"></i>');
            });
        }
        function muteButtonUnMuted() {
            $('.mute-quote-button').each(function() {
                $(this).html('<i class="fa fa-volume-up fa-2x"></i>');
            });
        }

        if (getCookie("muted") === 'true') {
        // checks if player is muted and then either toggles the volume button off or on
            muteButtonMuted()
            player.mute();
        }
        else {
            muteButtonUnMuted()
            player.unMute();
        }
        //$('#mute-quote-button_'+id).css('opacity','0.6');
        $('#video--mute-box_'+id).hover(function () { // when mouse is over video and mute button
            $('#mute-quote-button_'+id).animate({ // show the mute button
                opacity: '0.6'
            }, 100);
        }, function () {
            $('#mute-quote-button_'+id).animate({ // otherwise hide the mute button
                opacity: '0'
            }, 100);

        });
        $('#mute-quote-button_'+id).click(function() { // Mute/unmute on click
           if (player.isMuted()) {
               muteButtonUnMuted();
               for (var key in window.players) { // Unmute all players
                   if (window.players.hasOwnProperty(key)) {
                       window.players[key].unMute();
                   }
               }
               document.cookie = "muted=false";
           }
           else {
               muteButtonMuted();
               for (var key in window.players) { // Mute all players
                   if (window.players.hasOwnProperty(key)) {
                       window.players[key].mute();
                   }
               }
               document.cookie = "muted=true";
           }
        });

        player.oldVideoTime = start;

        function updateTime() { // If video time has actually changed, run onProgress()
            var newVideoTime = player.getCurrentTime();
            if (newVideoTime != player.oldVideoTime) {
                onProgress(newVideoTime, player, start, end);
                player.oldVideoTime = newVideoTime;
            }
        }
        setInterval(updateTime, 100);
        playOnView(id,player);

    }
    function onProgress(currentTime, player, start, end) { // If the video time is greater than the end time, seek video to the start time
        if (currentTime > end) {
            player.seekTo(start);
            player.playVideo();
        }
    }

    $('.quote-button').hover(function() {
    // Underline animation for buttons under player
        $(this).children("span").css("text-decoration","underline");
    },function() {
        $(this).children("span").css("text-decoration","none");
    });


    function playOnView(id, player) {
    // Play on screen view handlers

        $(window).on('DOMContentLoaded load resize scroll', onVisibilityChange);
        // On screen movement run onVisibilityChange

        function onVisibilityChange() {
        // Play video if it is in the view; otherwise pause the video (as long as it already completed the initial seek)
            if ($('#quote-box_' + id).isOnScreen(1, 0.8) & !window.isPlaying) {
                player.playVideo();
                window.isPlaying = true;
            }
            else if (player.onFirstSeekDone) {
                player.pauseVideo();
                window.isPlaying = false;
            }
        }
    }
    /*$(document).ready(onYouTubePlayerAPIReady);
    $(document).on('page:load', onYouTubePlayerAPIReady);*/
</script>